@model IEnumerable<Blog>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">
	<div class="row">
		@foreach(var item in Model){

			<div class="col-md-3">
				<div class="ibox">
					<div class="ibox-content product-box">

						<div>
							<a href="/Blog/BlogReadAll/@item.BlogID/">
								<img src="~/BlogImagesFolder/BlogThumbnailImage/@item.BlogThumbnailImage" class="img-fluid" alt="">
							</a>
						</div>
						<div class="product-desc">
							<span class="product-price">
								@item.BlogCreateDate.ToString("dd MMM")
							</span>
							<small class="text-muted">@item.Category.CategoryName</small>
							<a href="#" class="product-name">@item.BlogTitle</a>



							<div class="small m-t-xs">
								<p>
									@{
										int wordBreakLimit = 100; // Kelime bölünüyorsa max uzunluk
										int charLimit = 30; // Kelime bölünmeden kesilecek max uzunluk
										string blogContent = item.BlogContent;

										if (blogContent.Length > wordBreakLimit)
										{
											string trimmedContent = blogContent.Substring(0, wordBreakLimit);
											int lastSpaceIndex = trimmedContent.LastIndexOf(" ");

											if (lastSpaceIndex > 0) // Boşluk varsa, en son boşlukta kes
											{
												blogContent = trimmedContent.Substring(0, lastSpaceIndex) + "...";
											}
											else // Boşluk yoksa, charLimit'e göre kes
											{
												blogContent = blogContent.Substring(0, charLimit) + "...";
											}
										}
									}
									@blogContent
								</p>
							</div>

							<div class="m-t text-righ">

								<a href="/Blog/BlogReadAll/@item.BlogID/" class="btn btn-xs btn-outline btn-primary">Info <i class="fa fa-long-arrow-right"></i> </a>
							</div>

						</div>
					</div>
				</div>
			</div>
		}

	</div>



</div>
